@model UploadSuccessViewModel
@{
    ViewData["Title"] = "Upload Successful";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="alert alert-success">
            <h4><i class="bi bi-check-circle"></i> Upload Successful!</h4>
            <p class="mb-0">Your file has been uploaded and is ready for sharing.</p>
        </div>

        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">File Details</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <strong>File Name:</strong><br>
                        <span class="text-muted">@Model.OriginalFileName</span>
                    </div>
                    <div class="col-md-3">
                        <strong>Size:</strong><br>
                        <span class="text-muted">@Model.SizeDisplay</span>
                    </div>
                    <div class="col-md-3">
                        <strong>Expires:</strong><br>
                        <span class="text-muted">@Model.ExpiresAtUtc.ToString("MMM dd, yyyy")</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header bg-warning">
                <h5 class="mb-0"><i class="bi bi-exclamation-triangle"></i> One-Time Download Link</h5>
            </div>
            <div class="card-body">
                <div class="alert alert-danger">
                    <strong>⚠️ IMPORTANT:</strong> This link will work <strong>only once</strong>. 
                    The file will be permanently deleted after the first download.
                </div>

                <div class="mb-3">
                    <label for="downloadUrl" class="form-label"><strong>Download URL:</strong></label>
                    <div class="input-group">
                        <input type="text" class="form-control" id="downloadUrl" value="@Model.DownloadUrl" readonly>
                        <button class="btn btn-outline-secondary" type="button" id="copyBtn" onclick="copyToClipboard()">
                            <i class="bi bi-clipboard"></i> Copy
                        </button>
                    </div>
                </div>

                <div class="d-grid gap-2 d-md-flex justify-content-md-start">
                    <a href="@Model.DownloadUrl" class="btn btn-success" target="_blank">
                        <i class="bi bi-download"></i> Test Download
                    </a>
                    <button type="button" class="btn btn-primary" onclick="shareLink()">
                        <i class="bi bi-share"></i> Share Link
                    </button>
                </div>

                <div class="mt-3">
                    <small class="text-muted">
                        <strong>Security Note:</strong> Only share this link with people you trust. 
                        Anyone with this link can download the file (until it's used once).
                    </small>
                </div>
            </div>
        </div>

        <div class="mt-4 d-grid gap-2 d-md-flex justify-content-md-start">
            <a asp-controller="Files" asp-action="Upload" class="btn btn-outline-primary">
                <i class="bi bi-plus-circle"></i> Upload Another File
            </a>
            <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-house"></i> Back to Home
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function copyToClipboard() {
            const urlInput = document.getElementById('downloadUrl');
            const copyBtn = document.getElementById('copyBtn');
            
            urlInput.select();
            urlInput.setSelectionRange(0, 99999); // For mobile devices
            
            try {
                document.execCommand('copy');
                
                // Update button text temporarily
                const originalHtml = copyBtn.innerHTML;
                copyBtn.innerHTML = '<i class="bi bi-check"></i> Copied!';
                copyBtn.classList.remove('btn-outline-secondary');
                copyBtn.classList.add('btn-success');
                
                setTimeout(() => {
                    copyBtn.innerHTML = originalHtml;
                    copyBtn.classList.remove('btn-success');
                    copyBtn.classList.add('btn-outline-secondary');
                }, 2000);
            } catch (err) {
                console.error('Failed to copy: ', err);
                alert('Failed to copy to clipboard. Please copy the URL manually.');
            }
        }

        function shareLink() {
            const url = '@Model.DownloadUrl';
            const fileName = '@Model.OriginalFileName';
            
            if (navigator.share) {
                navigator.share({
                    title: 'OneTime Share - ' + fileName,
                    text: 'Download this file (one-time link): ' + fileName,
                    url: url
                }).catch(console.error);
            } else {
                // Fallback: copy to clipboard
                copyToClipboard();
            }
        }

        // Show warning when user tries to leave the page
        let warningShown = false;
        window.addEventListener('beforeunload', function(e) {
            if (!warningShown) {
                warningShown = true;
                const message = 'Make sure you have copied the download link. You won\'t be able to access it again after leaving this page.';
                e.returnValue = message;
                return message;
            }
        });

        // Remove warning when user clicks on navigation links within the app
        document.querySelectorAll('a[href^="/"], a[asp-controller], a[asp-action]').forEach(link => {
            link.addEventListener('click', () => {
                warningShown = true;
            });
        });
    </script>
}